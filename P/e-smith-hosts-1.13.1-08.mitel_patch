Index: e-smith-hosts/e-smith-hosts.spec
diff -u e-smith-hosts/root/etc/e-smith/events/actions/conf-hostsdb:1.3 e-smith-hosts/root/etc/e-smith/events/actions/conf-hostsdb:1.4
--- e-smith-hosts/root/etc/e-smith/events/actions/conf-hostsdb:1.3	Mon Jul 18 18:24:47 2005
+++ e-smith-hosts/root/etc/e-smith/events/actions/conf-hostsdb	Tue Jul 19 18:18:54 2005
@@ -1,7 +1,7 @@
-#!/usr/bin/perl -w
+#!/bin/sh
 
 #----------------------------------------------------------------------
-# copyright (C) 1999-2001 e-smith, inc.
+# copyright (C) 1999-2005 Mitel Networks Corporation
 #		
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -17,36 +17,12 @@
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
 # 
-# Technical support for this program is available from e-smith, inc.
-# Please visit our web site www.e-smith.net for details.
 #----------------------------------------------------------------------
 
-package esmith;
-
-use strict;
-use Errno;
-use esmith::config;
-use esmith::util;
-use esmith::db;
-
-my %conf;
-tie %conf, 'esmith::config';
-
-#------------------------------------------------------------
-# Populate the hosts database with default entries if they
-# they don't already exist
-#------------------------------------------------------------
-my $event = $ARGV [0];
-
-# Add the primary domain to the list of domains
-my $DomainName = db_get (\%conf, 'DomainName');
-
 #------------------------------------------------------------
 # Create the default hosts for the primary domain in
 # bootstrap-console-save
 #------------------------------------------------------------
 
-system ("/etc/e-smith/events/actions/create-default-hosts",
-                "domain-create", $DomainName);
-
-exit (0);
+exec /etc/e-smith/events/actions/create-default-hosts domain-create \
+  $(/sbin/e-smith/config get DomainName)
Index: e-smith-hosts/root/etc/e-smith/events/actions/conf-migrate-hosts
diff -u e-smith-hosts/root/etc/e-smith/events/actions/conf-migrate-hosts:1.7 e-smith-hosts/root/etc/e-smith/events/actions/conf-migrate-hosts:1.8
--- e-smith-hosts/root/etc/e-smith/events/actions/conf-migrate-hosts:1.7	Mon Jul 18 18:24:47 2005
+++ e-smith-hosts/root/etc/e-smith/events/actions/conf-migrate-hosts	Tue Jul 19 18:18:55 2005
@@ -1,7 +1,7 @@
 #!/usr/bin/perl -w
 
 #----------------------------------------------------------------------
-# copyright (C) 2002 Mitel Networks Corporation
+# copyright (C) 2002-2005 Mitel Networks Corporation
 # 
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -17,8 +17,6 @@
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
 # 
-# Technical support for this program is available from Mitel Networks 
-# Please visit our web site www.mitel.com/sme/ for details.
 #----------------------------------------------------------------------
 
 #--------------------------------------------------
@@ -42,19 +40,8 @@
 
 use strict;
 use Errno;
-use esmith::config;
-use esmith::db;
-
-my %conf;
-if( $ENV{ESMITH_CONFIG_DB} ) {
-    tie %conf, 'esmith::config', $ENV{ESMITH_CONFIG_DB};
-}
-else {
-    tie %conf, 'esmith::config';
-}
-
 use esmith::HostsDB;
-my $hdb = esmith::HostsDB->open_ro();
+my $hdb = esmith::HostsDB->open();
 
 =begin testing
 
@@ -151,10 +138,11 @@
     }
 }
 
-# Add the primary domain to the list of domains
-my $DomainName = db_get (\%conf, 'DomainName');
+# Get the list of local domain names
+use esmith::DomainsDB;
+my $ddb = esmith::DomainsDB->open_ro();
 
-my @domainsList = ( $DomainName );
+my @domainsList = map { $_-> key } $ddb->domains;
 
 eval "require esmith::NetworkServicesDB";
 
@@ -170,15 +158,6 @@
     }
 }
 
-use esmith::DomainsDB;
-my $ddb = esmith::DomainsDB->open_ro();
-
-# Add each virtual domain to the list of domains
-foreach my $domain ( $ddb->domains )
-{
-    push @domainsList, $domain->key;
-}
-
 #-------------------------------------------------------
 # Iterate over each domain to propagate the single host
 # entries for each virtual domain
@@ -195,17 +174,17 @@
     foreach my $host ( @ShortHostList )
     {
 	$properties{'InternalIP'} = 
-		db_get_prop (\%hosts, $host, 'InternalIP') || '';
+		$hdb->get_prop ($host, 'InternalIP') || '';
 
 	$properties{'ExternalIP'} = 
-		db_get_prop (\%hosts, $host, 'ExternalIP') || '';
+		$hdb->get_prop ($host, 'ExternalIP') || '';
 
 	$properties{'MACAddress'} = 
-		db_get_prop (\%hosts, $host, 'MACAddress') || '';
+		$hdb->get_prop ($host, 'MACAddress') || '';
 
 	my $FQDN = "$host.$domain";
 
-	next if (defined db_get (\%hosts, $FQDN));
+	next if (defined $hdb->get ($FQDN));
 
 	# If defined as host 'self', change to new format
 	if (($properties{'InternalIP'} eq 'self') && 
@@ -231,7 +210,8 @@
             warn "$host has no InternalIP or ExternalIP!\n";
         }
 
-	db_set (\%hosts, $FQDN, 'host', \%properties);
+        $properties{'type'} = 'host';
+	$hdb->new_record($FQDN, \%properties);
     }
 }
 
@@ -244,7 +224,7 @@
 foreach my $key ( @FQDNHostList )
 {
     # Skip the hosts if already in the new format
-    next if (defined db_get_prop (\%hosts, $key, 'HostType'));
+    next if (defined $hdb->get_prop ($key, 'HostType'));
 
     my %properties = (
 	Visibility => 'Local'
@@ -260,9 +240,9 @@
 	$properties{'error'} = 'Host has no matching domain in system';
     }
 
-    $properties{'InternalIP'} = db_get_prop (\%hosts, $key, 'InternalIP') || '';
-    $properties{'ExternalIP'} = db_get_prop (\%hosts, $key, 'ExternalIP') || '';
-    $properties{'MACAddress'} = db_get_prop (\%hosts, $key, 'MACAddress') || '';
+    $properties{'InternalIP'} = $hdb->get_prop ($key, 'InternalIP') || '';
+    $properties{'ExternalIP'} = $hdb->get_prop ($key, 'ExternalIP') || '';
+    $properties{'MACAddress'} = $hdb->get_prop ($key, 'MACAddress') || '';
 
     # If defined as host 'self', change to new format
     if ($properties{'InternalIP'} eq 'self')
@@ -278,14 +258,15 @@
 	$properties{'ExternalIP'} = '';
     }
 
-    db_set (\%hosts, $key, 'host', \%properties);
+    $properties{'type'} = 'host';
+    $hdb->new_record($key, \%properties);
 }
 
 
 # Remove the old single host entries
 foreach my $host ( @ShortHostList )
 {
-    db_delete (\%hosts, $host);
+    $hdb->get($host)->delete;
 }
 
 exit (0);
Index: e-smith-hosts/root/etc/e-smith/events/actions/create-default-hosts
diff -u e-smith-hosts/root/etc/e-smith/events/actions/create-default-hosts:1.3 e-smith-hosts/root/etc/e-smith/events/actions/create-default-hosts:1.4
--- e-smith-hosts/root/etc/e-smith/events/actions/create-default-hosts:1.3	Mon Jul 18 18:24:47 2005
+++ e-smith-hosts/root/etc/e-smith/events/actions/create-default-hosts	Tue Jul 19 18:18:55 2005
@@ -1,7 +1,7 @@
 #!/usr/bin/perl -w
 
 #----------------------------------------------------------------------
-# copyright (C) 1999-2001 e-smith, inc.
+# copyright (C) 1999-2005 Mitel Networks Corporation
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -17,22 +17,17 @@
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
 #
-# Technical support for this program is available from e-smith, inc.
-# Please visit our web site www.e-smith.net for details.
 #----------------------------------------------------------------------
 
 package esmith;
 
 use strict;
 use Errno;
-use esmith::config;
-use esmith::util;
-use esmith::db;
+use esmith::ConfigDB;
+use esmith::HostsDB;
 
-my %conf;
-tie %conf, 'esmith::config';
+my $db = esmith::ConfigDB->open_ro();
 
-use esmith::HostsDB;
 my $hdb = esmith::HostsDB->open();
 
 #------------------------------------------------------------
@@ -68,11 +63,10 @@
 # a property static=yes (meaning not editable from the interface)
 #------------------------------------------------------------
 
-if (defined db_get(\%conf, 'SystemName'))
+my $systemName = $db->get('SystemName');
+if ($systemName)
 {
-    my $systemName = db_get (\%conf, 'SystemName');
-
-    my $FQDN = join ".", $systemName, $domain;
+    my $FQDN = join ".", $systemName->value, $domain;
 
     unless (defined $hdb->get($FQDN))
     {
